{"jsonrpc":"2.0","result":{"$-admin":{"info":{"blockType":"$-admin","caption":"Admin Workflow","description":"Defines the logic for admin workflows. Admin workflows are seperate from the apis which can be used to perform maintainance tasks such as DevOps","blockCategory":"editable","inputVariable":null,"returnType":null,"inputType":null},"properties":[],"outputProperties":[]},"$-all":{"info":{"blockType":"$-all","caption":"All Requests","description":"Defines the logic for the all the endpoints. Triggers defined in this document applies for all the other API endpoints. Each API can override the triggers defined in this document.","blockCategory":"editable","inputVariable":null,"returnType":null,"inputType":null},"properties":[],"outputProperties":[]},"$-api":{"info":{"blockType":"$-api","caption":"REST API","description":"Defines the logic for the selected API","blockCategory":"editable","inputVariable":null,"returnType":null,"inputType":null},"properties":[],"outputProperties":[]},"$-cron":{"info":{"blockType":"$-cron","caption":"Scheduled Task","description":"Defines the logic for Scheduled tasks. This task is executed periodically in the backend which can also be used to handle various business related tasks or maintainance tasks.","blockCategory":"editable","inputVariable":null,"returnType":null,"inputType":null},"properties":[],"outputProperties":[]},"$-module":{"info":{"blockType":"$-module","caption":"Reusable Module","description":"Defines a reusable module which consists of  reusable blocks of various logic. 'Function' blocks defined here are exported to all the other documents regardless of their type.","blockCategory":"editable","inputVariable":null,"returnType":null,"inputType":null},"properties":[],"outputProperties":[]},"array:range":{"info":{"blockType":"array:range","caption":"New Number Range","description":"Defines a range of number as an array, and assign to a variable which can be defined on the text field on the block.","blockCategory":"statement","inputVariable":"set_variable","returnType":"array","inputType":null},"properties":[],"outputProperties":[]},"flow:breakloop":{"info":{"blockType":"flow:breakloop","caption":"Break Loop","description":"Breaks an iteration loop such as for, or while","blockCategory":"flow","inputVariable":null,"returnType":"null","inputType":null},"properties":[],"outputProperties":[]},"flow:callfunction":{"info":{"blockType":"flow:callfunction","caption":"Call Function","description":"Calls a function defined in the same document or in a reusable module. The function name can be defined in the variable text field on block.","blockCategory":"flow","inputVariable":"get_variable","returnType":"any","inputType":null},"properties":[],"outputProperties":[]},"flow:condition":{"info":{"blockType":"flow:condition","caption":"Condition","description":"Defines a If condition with only an If block","blockCategory":"flow","inputVariable":"expression","returnType":"boolean","inputType":"statement"},"properties":[],"outputProperties":[]},"flow:conditionfull":{"info":{"blockType":"flow:conditionfull","caption":"Condition","description":"Defines a If/Else condition","blockCategory":"flow","inputVariable":"expression","returnType":"boolean","inputType":"statement"},"properties":[],"outputProperties":[]},"flow:function":{"info":{"blockType":"flow:function","caption":"Function","description":"Defines a function which its name can be defined on the text input field on the block","blockCategory":"flow","inputVariable":"set_variable","returnType":"null","inputType":"statement"},"properties":[],"outputProperties":[]},"flow:httpstatuscode":{"info":{"blockType":"flow:httpstatuscode","caption":"HTTP Status Code","description":"Sets the HTTP status code that is sent with the HTTP response","blockCategory":"flow","inputVariable":null,"returnType":"number","inputType":null},"properties":[],"outputProperties":[]},"flow:returnfunction":{"info":{"blockType":"flow:returnfunction","caption":"Return from function","description":"Returns a value of a function. ","blockCategory":"flow","inputVariable":"reference","returnType":"any","inputType":null},"properties":[],"outputProperties":[]},"flow:setresponsevariable":{"info":{"blockType":"flow:setresponsevariable","caption":"Set Response","description":"Sets the response of the API, Admin Workflow, or the  Scheduled Task. The response could be set to a value, or a reference to a variable.","blockCategory":"flow","inputVariable":"reference","returnType":"null","inputType":null},"properties":[],"outputProperties":[]},"flow:terminate":{"info":{"blockType":"flow:terminate","caption":"Terminate","description":"Terminates the workflow","blockCategory":"flow","inputVariable":null,"returnType":"null","inputType":null},"properties":[],"outputProperties":[]},"flow:terminateerror":{"info":{"blockType":"flow:terminateerror","caption":"Terminate With Error","description":"Terminates the workflow with an error","blockCategory":"flow","inputVariable":null,"returnType":"null","inputType":null},"properties":[],"outputProperties":[]},"flow:tryCatch":{"info":{"blockType":"flow:tryCatch","caption":"Try Catch","description":"Try, catch block","blockCategory":"flow","inputVariable":"set_variable","returnType":"null","inputType":"statement"},"properties":[],"outputProperties":[]},"integration:rest":{"info":{"blockType":"integration:rest","caption":"Call REST API","description":"Call an external REST API","blockCategory":"statement","inputVariable":"set_variable","returnType":"object","inputType":null},"properties":[],"outputProperties":[]},"logging:log":{"info":{"blockType":"logging:log","caption":"Log Message","description":"Logs a message under varios log levels","blockCategory":"statement","inputVariable":null,"returnType":"null","inputType":null},"properties":[],"outputProperties":[]},"mysql:create":{"info":{"blockType":"mysql:create","caption":"Update MySQL Schema","description":"Updates MySQL schema defined on a schema document","blockCategory":"statement","inputVariable":null,"returnType":"boolean","inputType":null},"properties":[],"outputProperties":[]},"mysql:readmultiple":{"info":{"blockType":"mysql:readmultiple","caption":"Read multiple records from MySQL","description":"Read multiple records from MySQL","blockCategory":"statement","inputVariable":null,"returnType":"array","inputType":null},"properties":[],"outputProperties":[]},"mysql:readsingle":{"info":{"blockType":"mysql:readsingle","caption":"Read single record from MySQL","description":"Read single record from MySQL","blockCategory":"statement","inputVariable":null,"returnType":"array","inputType":null},"properties":[],"outputProperties":[]},"scripting:python":{"info":{"blockType":"scripting:python","caption":"Run Python Script","description":"Executes a python script, The script can be written on a python document","blockCategory":"statement","inputVariable":null,"returnType":"any","inputType":null},"properties":[],"outputProperties":[]},"scripting:readasset":{"info":{"blockType":"scripting:readasset","caption":"Read Asset","description":"Reads an asset which could be a file such as JSON, SQL , CSV, HTML or Python script which is embedded in this API project","blockCategory":"statement","inputVariable":null,"returnType":"any","inputType":null},"properties":[],"outputProperties":[]},"security:authbasic":{"info":{"blockType":"security:authbasic","caption":"Authorize using Basic Auth","description":"Performs basic authorization. Typically this block is used in 'All Requests' document under 'When a Request Arrives' trigger","blockCategory":"statement","inputVariable":null,"returnType":"object","inputType":null},"properties":[],"outputProperties":[]},"security:authjwt":{"info":{"blockType":"security:authjwt","caption":"Authorize using JWT","description":"Performs JWT token authorization. Typically this block is used in 'All Requests' document under 'When a Request Arrives' trigger","blockCategory":"statement","inputVariable":null,"returnType":"object","inputType":null},"properties":[],"outputProperties":[]},"trigger:afterRequest":{"info":{"blockType":"trigger:afterRequest","caption":"After Processed","description":"These blocks are executed after the business logic is executed","blockCategory":"trigger","inputVariable":null,"returnType":"null","inputType":"statement"},"properties":[],"outputProperties":[]},"trigger:beforeRequest":{"info":{"blockType":"trigger:beforeRequest","caption":"When the Request Arrives","description":"These blocks are executed before the business logic is executed","blockCategory":"trigger","inputVariable":null,"returnType":"null","inputType":null},"properties":[],"outputProperties":[]},"trigger:configure":{"info":{"blockType":"trigger:configure","caption":"Configure","description":"This trigger is used to configure various parameters for various blocks","blockCategory":"trigger","inputVariable":null,"returnType":"null","inputType":null},"properties":[],"outputProperties":[]},"trigger:onError":{"info":{"blockType":"trigger:onError","caption":"When Error Occurs","description":"This block is triggered when an error occurs in a particular workflow. If this trigger is used in 'All Requests' this will work as a universal error handler","blockCategory":"trigger","inputVariable":null,"returnType":"null","inputType":null},"properties":[],"outputProperties":[]},"trigger:onRequest":{"info":{"blockType":"trigger:onRequest","caption":"Request Handling Logic","description":"This  trigger is used to handle the business logic","blockCategory":"trigger","inputVariable":null,"returnType":"null","inputType":null},"properties":[],"outputProperties":[]},"variables:array":{"info":{"blockType":"variables:array","caption":"New Array","description":"Defines an array variable","blockCategory":"statement","inputVariable":"set_variable","returnType":"array","inputType":null},"properties":[],"outputProperties":[]},"variables:boolean":{"info":{"blockType":"variables:boolean","caption":"New Boolean","description":"Defines a boolean variable","blockCategory":"statement","inputVariable":"set_variable","returnType":"boolean","inputType":null},"properties":[],"outputProperties":[]},"variables:datetime":{"info":{"blockType":"variables:datetime","caption":"New Date/Time","description":"Defines a date time variable","blockCategory":"statement","inputVariable":"set_variable","returnType":"datetime","inputType":null},"properties":[],"outputProperties":[]},"variables:expression":{"info":{"blockType":"variables:expression","caption":"Expression","description":"Defines an expression","blockCategory":"statement","inputVariable":"expression","returnType":"any","inputType":null},"properties":[],"outputProperties":[]},"variables:getvalue":{"info":{"blockType":"variables:getvalue","caption":"Get Value","description":"Gets a value from another variable which should be specified as a reference","blockCategory":"statement","inputVariable":"reference","returnType":"any","inputType":null},"properties":[],"outputProperties":[]},"variables:lastoutput":{"info":{"blockType":"variables:lastoutput","caption":"Last Output","description":"Gets the value returned from the previous block","blockCategory":"statement","inputVariable":null,"returnType":"any","inputType":null},"properties":[],"outputProperties":[]},"variables:number":{"info":{"blockType":"variables:number","caption":"New Number","description":"Defines a number variable","blockCategory":"statement","inputVariable":"set_variable","returnType":"number","inputType":null},"properties":[],"outputProperties":[]},"variables:object":{"info":{"blockType":"variables:object","caption":"New Object","description":"Defines an object variable","blockCategory":"statement","inputVariable":"set_variable","returnType":"object","inputType":null},"properties":[],"outputProperties":[]},"variables:rest":{"info":{"blockType":"variables:rest","caption":"Get REST Paramter","description":"Gets a parameter which is sent through REST","blockCategory":"statement","inputVariable":"get_variable","returnType":"any","inputType":null},"properties":[],"outputProperties":[]},"variables:string":{"info":{"blockType":"variables:string","caption":"New String","description":"Defines a string variable","blockCategory":"statement","inputVariable":"set_variable","returnType":"string","inputType":null},"properties":[],"outputProperties":[]},"functions-array:add":{"info":{"blockType":"functions-array:add","caption":"Add To Array","description":"Adds an element to an array and returns the same array","blockCategory":"function","inputVariable":"reference","returnType":"array","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:clone":{"info":{"blockType":"functions-array:clone","caption":"Clone Array","description":"Clones an array and returns the new array","blockCategory":"function","inputVariable":null,"returnType":"array","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:filter":{"info":{"blockType":"functions-array:filter","caption":"Filter","description":"Filters an array based on an expression and returns an array","blockCategory":"function","inputVariable":"expression","returnType":"array","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:find":{"info":{"blockType":"functions-array:find","caption":"Find Element","description":"Finds an element from an array and returns the element, If an element is not found it returns null","blockCategory":"function","inputVariable":"expression","returnType":"any","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:first":{"info":{"blockType":"functions-array:first","caption":"Get First Element","description":"Gets the first element of an array, If there are no elements it returns null","blockCategory":"function","inputVariable":null,"returnType":"any","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:fromindex":{"info":{"blockType":"functions-array:fromindex","caption":"Get Element At","description":"Gets the element of an array from an index, If no element is found null is returned","blockCategory":"function","inputVariable":null,"returnType":"any","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:includes":{"info":{"blockType":"functions-array:includes","caption":"Array Contains","description":"Check if an array contains a particular value, the value can be defined as an element or a reference","blockCategory":"function","inputVariable":"reference","returnType":"boolean","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:last":{"info":{"blockType":"functions-array:last","caption":"Get Last Element","description":"Gets the last element of an array, If there are no elements null is returned","blockCategory":"function","inputVariable":null,"returnType":"any","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:length":{"info":{"blockType":"functions-array:length","caption":"Count","description":"Gets the size of an array","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:merge":{"info":{"blockType":"functions-array:merge","caption":"Merge","description":"Merges an array with another one and returns a new array","blockCategory":"function","inputVariable":"reference","returnType":"array","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:removebyfilter":{"info":{"blockType":"functions-array:removebyfilter","caption":"Remove by Filter","description":"Removes elements from an array based on an expression, and returns the new array","blockCategory":"function","inputVariable":"expression","returnType":"array","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:removeindex":{"info":{"blockType":"functions-array:removeindex","caption":"Remove by Index","description":"Remove an element from an array and returns a new array","blockCategory":"function","inputVariable":null,"returnType":"array","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:reverse":{"info":{"blockType":"functions-array:reverse","caption":"Reverse","description":"Reverse all the elements of an array and returns the new array","blockCategory":"function","inputVariable":null,"returnType":"array","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:sort":{"info":{"blockType":"functions-array:sort","caption":"Sort","description":"Sorts elements of an array","blockCategory":"function","inputVariable":null,"returnType":"array","inputType":"array"},"properties":[],"outputProperties":[]},"functions-array:toarray":{"info":{"blockType":"functions-array:toarray","caption":"To Array","description":"Gets a variable and place it in a new array, and returns the array","blockCategory":"function","inputVariable":null,"returnType":"array","inputType":"any"},"properties":[],"outputProperties":[]},"functions-convertors:changetype":{"info":{"blockType":"functions-convertors:changetype","caption":"Chagne Data Type","description":"Chances the data type of a value, and returns the converted value","blockCategory":"function","inputVariable":null,"returnType":"any","inputType":"any"},"properties":[],"outputProperties":[]},"functions-convertors:decode":{"info":{"blockType":"functions-convertors:decode","caption":"Decode Data","description":"Decodes a string to either Base64 or JSON","blockCategory":"function","inputVariable":null,"returnType":"any","inputType":"any"},"properties":[],"outputProperties":[]},"functions-convertors:encode":{"info":{"blockType":"functions-convertors:encode","caption":"Encode Data","description":"Encodes a value to either JSON or Base 64","blockCategory":"function","inputVariable":null,"returnType":"any","inputType":"string"},"properties":[],"outputProperties":[]},"functions-datetime:add":{"info":{"blockType":"functions-datetime:add","caption":"Add to Date/Time","description":"Add a number of years, months, days, hours, minites, or seconds to a date time variable","blockCategory":"function","inputVariable":null,"returnType":"datetime","inputType":"datetime"},"properties":[],"outputProperties":[]},"functions-flow:foreach":{"info":{"blockType":"functions-flow:foreach","caption":"For Each","description":"Iterates through an array, each item in an iteration can be defined on the text field on the block","blockCategory":"function","inputVariable":"set_variable","returnType":"null","inputType":"array"},"properties":[],"outputProperties":[]},"functions-flow:setresponse":{"info":{"blockType":"functions-flow:setresponse","caption":"Set Response","description":"Sets the response of the API, Admin Workflow, or the  Scheduled Task returned by a function","blockCategory":"function","inputVariable":null,"returnType":"null","inputType":"any"},"properties":[],"outputProperties":[]},"functions-flow:returnfunction":{"info":{"blockType":"functions-flow:returnfunction","caption":"Return from function","description":"Returns the value sent to the block from the function","blockCategory":"function","inputVariable":null,"returnType":"any","inputType":"any"},"properties":[],"outputProperties":[]},"functions-integration:smtp-email":{"info":{"blockType":"functions-integration:smtp-email","caption":"Send Email (SMTP)","description":"Send an email through SMTP server, the body should be sent as an input to the function","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"boolean"},"properties":[],"outputProperties":[]},"functions-mysql:delete":{"info":{"blockType":"functions-mysql:delete","caption":"Delete a record in MySQL","description":"Deletes an item from MySQL, the Id of the table record should be returned from the previous block","blockCategory":"function","inputVariable":null,"returnType":"boolean","inputType":"any"},"properties":[],"outputProperties":[]},"functions-mysql:insert":{"info":{"blockType":"functions-mysql:insert","caption":"Insert records to MySQL","description":"Inserts items to MySQL, the object or array if items should be returned from the previous block","blockCategory":"function","inputVariable":null,"returnType":"object","inputType":"any"},"properties":[],"outputProperties":[]},"functions-mysql:update":{"info":{"blockType":"functions-mysql:update","caption":"Update records in MySQL","description":"Updates data in MySQL, the array or the object that should be updated should be returned from the previous block","blockCategory":"function","inputVariable":null,"returnType":"boolean","inputType":"any"},"properties":[],"outputProperties":[]},"functions-number:abs":{"info":{"blockType":"functions-number:abs","caption":"Absolute","description":"Gets the absolute value of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:ceiling":{"info":{"blockType":"functions-number:ceiling","caption":"Ceiling","description":"Gets the ceiling value of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:cos":{"info":{"blockType":"functions-number:cos","caption":"Cos","description":"Gets the cos value of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:floor":{"info":{"blockType":"functions-number:floor","caption":"Floor","description":"Gets the floor value of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:log":{"info":{"blockType":"functions-number:log","caption":"Log","description":"Gets the log value of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:power":{"info":{"blockType":"functions-number:power","caption":"Power","description":"Gets the power value of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:round":{"info":{"blockType":"functions-number:round","caption":"Round","description":"Gets the round value of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:sin":{"info":{"blockType":"functions-number:sin","caption":"Sin","description":"Gets the sin value of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:sqroot":{"info":{"blockType":"functions-number:sqroot","caption":"Square Root","description":"Gets the square root of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:tan":{"info":{"blockType":"functions-number:tan","caption":"Tan","description":"Gets the tan value of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:tofixed":{"info":{"blockType":"functions-number:tofixed","caption":"To Fixed Decimals","description":"Gets a number with a fixed set of decimals","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-number:trunc":{"info":{"blockType":"functions-number:trunc","caption":"Truncate","description":"Truncates the decimals of a number","blockCategory":"function","inputVariable":null,"returnType":"number","inputType":"number"},"properties":[],"outputProperties":[]},"functions-object:addfields":{"info":{"blockType":"functions-object:addfields","caption":"Set Fields","description":"Add new fields for an object","blockCategory":"function","inputVariable":null,"returnType":"object","inputType":"object"},"properties":[],"outputProperties":[]},"functions-object:clone":{"info":{"blockType":"functions-object:clone","caption":"Clone Object","description":"Clones an object","blockCategory":"function","inputVariable":null,"returnType":"object","inputType":"object"},"properties":[],"outputProperties":[]},"functions-object:deletefields":{"info":{"blockType":"functions-object:deletefields","caption":"Delete Fields","description":"Deles fields of an object","blockCategory":"function","inputVariable":null,"returnType":"object","inputType":"object"},"properties":[],"outputProperties":[]},"functions-object:keys":{"info":{"blockType":"functions-object:keys","caption":"Get All Field Names","description":"Get all the field names","blockCategory":"function","inputVariable":null,"returnType":"object","inputType":"array"},"properties":[],"outputProperties":[]},"functions-object:merge":{"info":{"blockType":"functions-object:merge","caption":"Merge Object","description":"Merges all the fields of an object with another","blockCategory":"function","inputVariable":"reference","returnType":"object","inputType":"object"},"properties":[],"outputProperties":[]},"functions-scripting:python":{"info":{"blockType":"functions-scripting:python","caption":"Run Python Script","description":"Executes a python script, the value returned from the previous block is sent to the script","blockCategory":"function","inputVariable":null,"returnType":"any","inputType":"any"},"properties":[],"outputProperties":[]},"functions-security:generatetoken":{"info":{"blockType":"functions-security:generatetoken","caption":"Generate JWT","description":"Generates a JWT from the object returned from the previous block","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"object"},"properties":[],"outputProperties":[]},"functions-string:changecase":{"info":{"blockType":"functions-string:changecase","caption":"Change Case","description":"Changes a string to either lower case, upper case, sentence case or camel case","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"string"},"properties":[],"outputProperties":[]},"functions-string:charat":{"info":{"blockType":"functions-string:charat","caption":"Character At","description":"Gets the character at a particularposition","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"string"},"properties":[],"outputProperties":[]},"functions-string:includes":{"info":{"blockType":"functions-string:includes","caption":"String includes","description":"Checks whther the string includes a sub string","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"boolean"},"properties":[],"outputProperties":[]},"functions-string:length":{"info":{"blockType":"functions-string:length","caption":"Length","description":"Returns the length of a string","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"number"},"properties":[],"outputProperties":[]},"functions-string:replace":{"info":{"blockType":"functions-string:replace","caption":"Replace","description":"Replaces all the instances of a particular value of a string","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"string"},"properties":[],"outputProperties":[]},"functions-string:split":{"info":{"blockType":"functions-string:split","caption":"Split","description":"Splits a string with a particular character","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"array"},"properties":[],"outputProperties":[]},"functions-string:substring":{"info":{"blockType":"functions-string:substring","caption":"Substring","description":"Extracts part of a string","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"array"},"properties":[],"outputProperties":[]},"functions-string:trim":{"info":{"blockType":"functions-string:trim","caption":"Trim","description":"Remove leading and trailing spaces of a string","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"string"},"properties":[],"outputProperties":[]},"functions-variables:gettype":{"info":{"blockType":"functions-variables:gettype","caption":"Get Type","description":"Gets the type of a variable","blockCategory":"function","inputVariable":null,"returnType":"string","inputType":"any"},"properties":[],"outputProperties":[]},"functions-variables:tovariable":{"info":{"blockType":"functions-variables:tovariable","caption":"Set Variable","description":"Defines a variable from the value retururned from the previous block","blockCategory":"function","inputVariable":"set_variable","returnType":"any","inputType":"any"},"properties":[],"outputProperties":[]}},"id":"3CEA8760923639E8"}