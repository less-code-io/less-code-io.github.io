{"version":3,"sources":["webpack:///./src/DesignSystem/Pages/Editor/EditorPage/BlockEditorOrganism/BlockEditorOrganism.vue?823f","webpack:///./src/DesignSystem/Pages/Editor/EditorPage/BlockEditorOrganism/BlockEditorOrganism.vue?c626","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/DesignSystem/Pages/Editor/EditorPage/BlockEditorOrganism/BlockEditorOrganism.hook.js","webpack:///src/DesignSystem/Pages/Editor/EditorPage/BlockEditorOrganism/BlockEditorOrganism.vue","webpack:///./src/DesignSystem/Pages/Editor/EditorPage/BlockEditorOrganism/BlockEditorOrganism.vue?668a","webpack:///./src/DesignSystem/Pages/Editor/EditorPage/BlockEditorOrganism/BlockEditorOrganism.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","style","attrs","staticRenderFns","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","i","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","nonIterableRest","mainWorkSpace","blocklyDiv","BlockEditorOrganism","api","allRequests","deployment","cron","module","selectedBlock","editableType","vue","selectedItems","editable","type","EDITABLE_TYPES","DOCUMENT_LEVEL","editableLevelProperties","API","ADMIN","CRON","MODULE","actions","setSelectedBlock","onGlobalEvent","EVENTS","DOCUMENT","BEFORE_SAVE","beforeDocumentSave","ON_PROPERTIES_CHANGED","propertiesChanged","EDITABLE_SWITCHED","editableSwitched","TOOLBAR","UNDO","undo","REDO","redo","workspace","updateWorkspaceFromSelectedEditable","setWorkspaceProperties","updateSelectedEditable","reason","REASONS","USER_SAVE","allBlocks","getAllBlocks","initialX","scrollX","initialY","scrollY","centerOnBlock","id","diffX","diffY","result","blocks","forEach","block","blockName","propName","rootBlock","find","name","properties","blockTypeId","params","staticCache","localStorage","busyTitle","Strings","PROGRESS_INDICATOR","LOADING_BLOCKS","backend","getBlocksAndToolbox","error","injectCustomBlocks","patchSelectedItems","toolbox","docLevelBlocks","getGuides","guideResposne","setGuides","createDocLevelBlocks","toolBoxLoaded","msgbox","ERROR_MESSAGES","MESSAGE_API_BLOCKS","MSGBOX_TYPE","OK","TITLE_MESSAGE_API_BLOCKS","initializeBlockly","Blockly","Blocks","init","jsonInit","data","workspaceSettings","trashcan","sounds","zoom","theme","Themes","Dark","grid","spacing","colour","Scrollbar","scrollbarThickness","inject","addChangeListener","Events","disableOrphans","changeEvent","element","getBlockById","blockId","selected","isWorkspaceLoading","document","getElementsByClassName","stroke","clear","wfObj","workflows","xmlText","selectedWorkflow","hasData","xml","Xml","textToDom","domToWorkspace","resize","clearUndo","editableObj","openedDocument","editables","filter","e","selectedWfName","workspaceToDom","domToText","setOpenedDocument","panels","rightPanel","right","bottomPanel","compileErrors","widthDeduction","heightDeduction","size","width","height","getElementById","svgResize","AtomicDesign","hook","setBackendNamespace","setElementName","beforeCreate","methods","mounted","getAssets","beforeDestroy","unsubscribeGlobalEvents","resetStore","resetWorkspace","computed","selectedResources","resizeWorkspace","component"],"mappings":"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","file":"ide/static/js/chunk-265bdf2f.b859fad6.js","sourcesContent":["import mod from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlockEditorOrganism.vue?vue&type=style&index=0&id=bf1dab4e&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlockEditorOrganism.vue?vue&type=style&index=0&id=bf1dab4e&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"block-editor-organism\"},[_c('div',{staticClass:\"block-editor-organism__blockly-workspace\",style:(_vm.size),attrs:{\"id\":\"block-editor-organism__blockly\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import {AtomicDesign} from '../../../../../Frontend/Core/AtomicDesign';\r\nimport {EVENTS,REASONS} from '../../../../UiResources/events';\r\nimport {EDITABLE_TYPES} from '../../../../../Common/VariousTypes';\r\nimport Strings from '../../../../UiResources/strings';\r\nimport Blockly from 'blockly';\r\n\r\nconst blocklyDiv = \"block-editor-organism__blockly\";\r\nlet mainWorkSpace;\r\n\r\nexport default class BlockEditorOrganism extends AtomicDesign {\r\n\r\n    workspace = null;\r\n    hasData = false;\r\n\r\n    editableLevelProperties = {\r\n        api: null,\r\n        allRequests: null,\r\n        deployment: null,\r\n        cron: null,\r\n        module: null\r\n    }\r\n\r\n    // documentProperties = null;\r\n    isWorkspaceLoading = false;\r\n    toolbox = null;\r\n\r\n    setWorkspaceProperties(){\r\n        const editableType = this.vue.selectedItems?.editable?.type;\r\n        let selectedBlock;\r\n        switch(editableType){\r\n            case EDITABLE_TYPES.DOCUMENT_LEVEL:\r\n                selectedBlock = this.editableLevelProperties.allRequests;\r\n                break;\r\n            case EDITABLE_TYPES.API:\r\n                selectedBlock = this.editableLevelProperties.api;\r\n                break;                \r\n            case EDITABLE_TYPES.ADMIN:\r\n                selectedBlock = this.editableLevelProperties.deployment;\r\n                break;\r\n            case EDITABLE_TYPES.CRON:\r\n                selectedBlock = this.editableLevelProperties.cron;\r\n                break;\r\n            case EDITABLE_TYPES.MODULE:\r\n                selectedBlock = this.editableLevelProperties.module;\r\n                break;\r\n            default : \r\n                selectedBlock = null;\r\n                break;\r\n        }\r\n\r\n        this.actions().setSelectedBlock(selectedBlock);\r\n    }\r\n\r\n    addEventHandlers(){\r\n        this.onGlobalEvent(EVENTS.DOCUMENT.BEFORE_SAVE,this.beforeDocumentSave);\r\n        this.onGlobalEvent(EVENTS.DOCUMENT.ON_PROPERTIES_CHANGED,this.propertiesChanged);\r\n        this.onGlobalEvent(EVENTS.DOCUMENT.EDITABLE_SWITCHED,this.editableSwitched);\r\n        this.onGlobalEvent(EVENTS.TOOLBAR.UNDO,this.undo);\r\n        this.onGlobalEvent(EVENTS.TOOLBAR.REDO,this.redo);\r\n    }\r\n    \r\n    undo(){\r\n        this.workspace.undo(false);\r\n    }\r\n\r\n    redo(){\r\n        this.workspace.undo(true);\r\n    }\r\n\r\n    editableSwitched(editable){\r\n        switch(editable.type){\r\n            case EDITABLE_TYPES.API:\r\n            case EDITABLE_TYPES.DOCUMENT_LEVEL:\r\n            case EDITABLE_TYPES.ADMIN:\r\n            case EDITABLE_TYPES.CRON:\r\n            case EDITABLE_TYPES.MODULE:\r\n                this.updateWorkspaceFromSelectedEditable(editable);\r\n                this.setWorkspaceProperties();\r\n                break;\r\n        }\r\n    }\r\n\r\n    propertiesChanged({editable}){\r\n        this.updateSelectedEditable(editable);\r\n    }\r\n\r\n    beforeDocumentSave({reason}){\r\n        const editable = this.vue.selectedItems?.editable;\r\n        if (editable){\r\n            if (reason !== REASONS.BEFORE_SAVE.USER_SAVE){\r\n                const allBlocks = this.workspace.getAllBlocks();\r\n                if (allBlocks.length !== 0){\r\n                    const initialX = this.workspace.scrollX;\r\n                    const initialY = this.workspace.scrollY;\r\n                    this.workspace.centerOnBlock(allBlocks[0].id);\r\n                    const diffX = this.workspace.scrollX - initialX;\r\n                    const diffY = this.workspace.scrollY - initialY;\r\n                    editable.scrollX = diffX;\r\n                    editable.scrollY = diffY;\r\n                    this.workspace.scrollX  =  diffX + initialX;\r\n                    this.workspace.scrollY  =  diffY + initialY;\r\n                }else {\r\n                    editable.scrollX = this.workspace.scrollX;\r\n                    editable.scrollY = this.workspace.scrollY;\r\n                }\r\n            }\r\n          this.updateSelectedEditable(editable);\r\n        }\r\n    }\r\n\r\n    createDocLevelBlocks(result, blocks){       \r\n        blocks.forEach(block=>{\r\n            const [blockName,propName] = block;\r\n            if (!this.editableLevelProperties[propName]){\r\n                const rootBlock = result.blocks.find(block => block.name == blockName);\r\n                this.editableLevelProperties[propName] = {\r\n                    id :0,\r\n                    type:blockName,\r\n                    properties: rootBlock.properties\r\n                };\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    async getAssets(){\r\n        const blockTypeId = \"Api\";\r\n        const params = {staticCache:true,localStorage:true, busyTitle: Strings.PROGRESS_INDICATOR.LOADING_BLOCKS};\r\n        const {result,error} = await this.backend(params).getBlocksAndToolbox(blockTypeId);\r\n        \r\n        if (!error){\r\n            this.injectCustomBlocks(result.blocks);\r\n            this.actions().patchSelectedItems({blocks:result.blocks});\r\n            this.toolbox = result.toolbox;\r\n\r\n            const docLevelBlocks = [\r\n                [\"$-api\", \"api\"],\r\n                [\"$-admin\", \"deployment\"],\r\n                [\"$-all\", \"allRequests\"],\r\n                [\"$-cron\", \"cron\"],\r\n                [\"$-module\", \"module\"]\r\n            ]\r\n\r\n            const guideResposne = await this.backend(params).getGuides(blockTypeId);\r\n\r\n            if (!guideResposne.error){\r\n                this.actions().setGuides(guideResposne.result);\r\n            }\r\n\r\n            this.createDocLevelBlocks(result, docLevelBlocks);\r\n            this.toolBoxLoaded();\r\n\r\n        }else {\r\n            this.msgbox(Strings.ERROR_MESSAGES.MESSAGE_API_BLOCKS, this.MSGBOX_TYPE.OK, Strings.ERROR_MESSAGES.TITLE_MESSAGE_API_BLOCKS);\r\n        }\r\n    }\r\n\r\n    toolBoxLoaded(){\r\n        this.initializeBlockly();\r\n        this.updateWorkspaceFromSelectedEditable(this.vue.selectedItems.editable);\r\n        this.setWorkspaceProperties();\r\n    }\r\n\r\n    injectCustomBlocks(blocks){\r\n        for (const block of blocks){\r\n            Blockly.Blocks[block.name] = (function(block){\r\n                return {\r\n                    init: function() {\r\n                        this.jsonInit(block.data);\r\n                    }\r\n                };\r\n            })(block);\r\n        }\r\n    }\r\n\r\n    initializeBlockly(){\r\n        var workspaceSettings = {\r\n            toolbox: this.toolbox, \r\n            trashcan: false,\r\n            sounds:\tfalse,\r\n            zoom: true,\r\n            theme: Blockly.Themes.Dark,\r\n            grid:{\r\n                spacing: 10,\r\n                length: 10,\r\n                colour: 'rgb(42, 42, 42)'\r\n            }\r\n        };\r\n\r\n        Blockly.Scrollbar.scrollbarThickness = 15;\r\n        this.workspace = Blockly.inject(blocklyDiv,workspaceSettings);\r\n        mainWorkSpace = this.workspace;\r\n        this.workspace.addChangeListener(Blockly.Events.disableOrphans);\r\n        this.workspace.addChangeListener((changeEvent) => {\r\n\r\n            if (changeEvent.type == \"ui\"){\r\n                if (changeEvent.element == \"click\")\r\n                {\r\n                    const block = this.workspace.getBlockById(changeEvent.blockId);\r\n                    //block.setFieldValue(\"TEST\", \"CAPTION\");\r\n                    this.actions().setSelectedBlock({id: block.id, type: block.type});\r\n                }\r\n    \r\n                if (changeEvent.element == \"selected\"){\r\n                    if (!Blockly.selected){\r\n                        this.setWorkspaceProperties();\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (changeEvent.type == \"create\"){\r\n                if (Blockly?.selected?.id){\r\n                    this.actions().setSelectedBlock({id: Blockly.selected.id, type: Blockly.selected.type});\r\n                }\r\n            }\r\n\r\n            if (changeEvent.type == \"delete\"){\r\n                if (!this.isWorkspaceLoading){\r\n                    delete this.vue.selectedItems.editable.properties[changeEvent.blockId];\r\n                }\r\n            }\r\n\r\n            if (changeEvent.type == \"finished_loading\"){\r\n                this.isWorkspaceLoading = false;\r\n            }           \r\n            \r\n        });\r\n\r\n        document.getElementsByClassName(\"blocklyMainBackground\")[0].style.stroke = \"none\";  \r\n\r\n    }\r\n\r\n\r\n    updateWorkspaceFromSelectedEditable(editable){\r\n        if (!editable){\r\n            return;\r\n        }\r\n        this.isWorkspaceLoading = true;\r\n\r\n        if (this.workspace == null){   \r\n            this.initializeBlockly();\r\n        }\r\n        //console.log(this.workspace.scrollbar);\r\n        \r\n        this.workspace.clear();\r\n        // this.actions().setExecutionFlow(null);\r\n        //this.actions().setCompileErrors(null);\r\n\r\n        const wfObj  = editable.workflows;\r\n        const xmlText = wfObj ? wfObj[this.vue.selectedWorkflow] : null;\r\n\r\n        if (xmlText){\r\n            this.hasData = true;\r\n            const xml = Blockly.Xml.textToDom(xmlText);\r\n            Blockly.Xml.domToWorkspace(xml, this.workspace);\r\n            \r\n           \r\n            const allBlocks = this.workspace.getAllBlocks();\r\n            \r\n            if (editable.scrollX && editable.scrollY){\r\n                if (allBlocks.length !== 0){\r\n                    this.workspace.centerOnBlock(allBlocks[0].id);\r\n                    this.workspace.scrollX = this.workspace.scrollX - editable.scrollX;\r\n                    this.workspace.scrollY = this.workspace.scrollY - editable.scrollY;\r\n                }else {\r\n                    this.workspace.scrollX = editable.scrollX;\r\n                    this.workspace.scrollY = editable.scrollY;\r\n                }\r\n                this.workspace.resize();\r\n    \r\n            }else {\r\n                if (allBlocks.length !== 0){\r\n                    this.workspace.centerOnBlock(allBlocks[0].id);\r\n                }\r\n            }\r\n           \r\n            this.workspace.clearUndo();\r\n            \r\n        }\r\n        else {\r\n            this.hasData = false;\r\n        }\r\n    }\r\n\r\n    updateSelectedEditable(editable){\r\n        if (editable){\r\n            if (editable.type == EDITABLE_TYPES.API || EDITABLE_TYPES.DOCUMENT_LEVEL){\r\n                let editableObj = this.vue.openedDocument.editables.filter(e=>e.id == editable.id)[0];\r\n                if (editableObj){\r\n                    if (!editableObj.workflows){\r\n                        editableObj.workflows = {};\r\n                    }\r\n            \r\n                    const selectedWfName = this.vue.selectedWorkflow;\r\n                    const xml = Blockly.Xml.workspaceToDom(this.workspace);\r\n                    const xmlText = Blockly.Xml.domToText(xml);\r\n                    editableObj.workflows[selectedWfName] = xmlText;\r\n\r\n                    // const allBlocks = this.workspace.getAllBlocks();\r\n                    // if (allBlocks.length !== 0){\r\n                    //     const initialX = this.workspace.scrollX;\r\n                    //     const initialY = this.workspace.scrollY;\r\n                    //     this.workspace.centerOnBlock(allBlocks[0].id);\r\n                    //     const diffX = this.workspace.scrollX - initialX;\r\n                    //     const diffY = this.workspace.scrollY - initialY;\r\n                    //     editableObj.scrollX = diffX;\r\n                    //     editableObj.scrollY = diffY;\r\n                    //     this.workspace.scrollX  =  diffX + initialX;\r\n                    //     this.workspace.scrollY  =  diffY + initialY;\r\n                    // }else {\r\n                    //     editableObj.scrollX = this.workspace.scrollX;\r\n                    //     editableObj.scrollY = this.workspace.scrollY;\r\n                    // }\r\n            \r\n                    this.actions().setOpenedDocument({result:this.vue.openedDocument});\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    resizeWorkspace(){\r\n        const panels = this.panels;\r\n        const rightPanel = panels.right;\r\n        const bottomPanel = this.compileErrors;\r\n  \r\n        let widthDeduction = 661;\r\n        let heightDeduction = 61;\r\n        \r\n        if (!rightPanel){\r\n          widthDeduction -= 300;\r\n        }\r\n        \r\n        if (bottomPanel){\r\n            heightDeduction += 150;\r\n        }\r\n\r\n        const size = {\r\n          width: `calc(100% - ${widthDeduction}px)`,\r\n          height: `calc(100% - ${heightDeduction}px)`,\r\n        }\r\n  \r\n        if (mainWorkSpace){\r\n            const element = document.getElementById(blocklyDiv);\r\n            if (element){\r\n                element.style.width = size.width;\r\n                element.style.height = size.height;\r\n                Blockly.svgResize(mainWorkSpace);\r\n            }\r\n        }\r\n        \r\n        return size;\r\n    }\r\n\r\n    resetStore(){\r\n        this.actions().setSelectedBlock(null);\r\n        this.actions().setGuides(null);\r\n    }\r\n\r\n    resetWorkspace() {\r\n        // this.workspace = null;\r\n        //mainWorkSpace = null;\r\n\r\n        this.editableLevelProperties = {\r\n            api: null,\r\n            allRequests: null,\r\n            deployment: null,\r\n            cron: null,\r\n            module: null\r\n        };\r\n\r\n        this.hasData = false;\r\n        this.isWorkspaceLoading = false;\r\n    }\r\n}","<template>\r\n  <div class=\"block-editor-organism\">\r\n    <div id=\"block-editor-organism__blockly\" class=\"block-editor-organism__blockly-workspace\" :style=\"size\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport BlockEditorOrganism from './BlockEditorOrganism.hook'\r\nconst hook = new BlockEditorOrganism();\r\nhook.setBackendNamespace(\"Pages/Editor/EditorPage\").setElementName(\"BlockEditorOrganism\");\r\n\r\nexport default {\r\n  name: 'BlockEditorOrganism',\r\n  beforeCreate() { hook.hook(this); hook.addEventHandlers();},\r\n  methods: {},\r\n  mounted() { \r\n    hook.getAssets(); \r\n  },\r\n  beforeDestroy() { \r\n    const editable = this.selectedItems?.editable;\r\n    if (editable){\r\n      hook.updateSelectedEditable(editable);\r\n    }\r\n    hook.unsubscribeGlobalEvents();\r\n    hook.resetStore();\r\n    hook.resetWorkspace();\r\n  },\r\n  data() {\r\n      return { \r\n        selectedWorkflow: \"main\"\r\n      }\r\n  },\r\n  computed: {\r\n    panels(){\r\n      return this.openedDocument.selectedResources.panels;\r\n    }, \r\n    size: hook.resizeWorkspace,\r\n    ...hook.getters(\"selectedItems\",\"openedDocument\",\"selectedBlock\",\"compileErrors\")\r\n  }\r\n  \r\n}\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n.blocklyMainBackground {\r\n  stroke: none !important;\r\n}\r\n\r\n.block-editor-organism {\r\n    height:calc(100% - 150px);\r\n    &__blockly-workspace {\r\n      position: absolute;\r\n      overflow: hidden;\r\n      border: none;\r\n  }\r\n}\r\n\r\n\r\n</style>\r\n","import mod from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlockEditorOrganism.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BlockEditorOrganism.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BlockEditorOrganism.vue?vue&type=template&id=bf1dab4e&scoped=true&\"\nimport script from \"./BlockEditorOrganism.vue?vue&type=script&lang=js&\"\nexport * from \"./BlockEditorOrganism.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BlockEditorOrganism.vue?vue&type=style&index=0&id=bf1dab4e&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bf1dab4e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}